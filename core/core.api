service core-api {
	@handler UserLogin
	post /user/login (LogicRequest) returns (LoginReply)
	@handler UserDetail
	get /user/detail (UserDetailRequest) returns (UserDetailReply)
	@handler MailCodeSendRegister
	post /mail/code/send/register (MailCodeSendRegisterRequest) returns (MailCodeSendRegisterReply)
	@handler UserRegister
	post /user/register (UserRegisterRequest) returns (UserRegisterReply)
	@handler ShareBasicDetail
	post /share/basic/detail (ShareBasicDetailRequest) returns (ShareBasicDetailReply)
}

@server(
	middleware : Auth
)
service core-api {
	@handler FileUpload
	post /file/upload (FileUploadRequest) returns (FileUploadReply)
	@handler UserRepositorySave
	post /user/repository/save (UserRepositorySaveRequest) returns (UserRepositorySaveReply)
	@handler UserFileList
	get /user/file/list (UserFileListRequest) returns (UserFileListReply)
	@handler UserFileNameUpdate
	post /user/file/name/update (UserFileNameUpdateRequest) returns (UserFileNameUpdateReply)
	@handler UserFolderCreate
	post /user/folder/create (UserFolderCreateRequest) returns (UserFolderCreateReply)
	@handler UserFileDelete
	post /user/file/delete (UserFileDeleteRequest) returns (UserFileDeleteReply)
	@handler UserFileMove
	put /user/file/move (UserFileMoveRequest) returns (UserFileMoveReply)
	@handler ShareBasicCreate
	post /share/basic/create (ShareBasicCreateRequest) returns (ShareBasicCreateReply)
	@handler ShareBasicSave
	post /share/basic/save (ShareBasicSaveRequest) returns (ShareBasicSaveReply)
}

type ShareBasicSaveRequest {
	RepositoryIdentity string `json:"repository_identity"`
	ParentId           int    `json:"parent_id"`
}

type ShareBasicSaveReply {
	Identity string `json:"identity"`
}

type ShareBasicDetailRequest {
	Identity string `json:"identity"`
}

type ShareBasicDetailReply {
	Name               string `json:"name"`
	Ext                string `json:"ext"`
	Size               int    `json:"size"`
	Path               string `json:"path"`
	RepositoryIdentity string `json:" repository_identity"`
}

type ShareBasicCreateRequest {
	UserRepositoryIdentity string `json:"user_repository_identity"`
	ExpiredTime            int    `json:"expired_time"`
}

type ShareBasicCreateReply {
	Identity string `json:"identity"`
}

type UserFileMoveRequest {
	Identity       string `json:"identity"`
	ParentIdentity string `json:"parent_identity"`
}

type UserFileMoveReply{}

type UserFileDeleteRequest {
	Identity string `json:"identity"`
}

type UserFileDeleteReply{}

type UserFolderCreateRequest {
	Name     string `json:"name"`
	ParentId int64  `json:"parent_id"`
}

type UserFolderCreateReply {
	Identity string `json:"identity"`
}

type UserFileNameUpdateRequest {
	Identity string `json:"identity"`
	Name     string `json:"name"`
}

type UserFileNameUpdateReply {
}

type UserFileListRequest {
	Id   int64 `json:"id, optional"`
	Page int   `json:"page, optional"`
	Size int   `json:"size,optional"`
}

type UserFileListReply {
	List  []*UserFile `json:"list"`
	Count int64       `json:"count"`
}
type UserFile {
	Id                 int64  `json:"id"`
	Identity           string `json:"identity"`
	RepositoryIdentity string `json:"repository_identity"`
	Name               string `json:"name"`
	Ext                string `json:"ext"`
	Path               string `json:"path"`
	Size               int64  `json:"size"`
}

type UserRepositorySaveRequest {
	ParentId           int64  `json:"parent_id"`
	RepositoryIdentity string `json:" repository_identity"`
	Ext                string `json:"ext"`
	Name               string `json:"name"`
}

type UserRepositorySaveReply {
}

type LogicRequest {
	Name     string `json:"name"`
	Password string `json:"password"`
}

type LoginReply {
	Token string `json:"token"`
}

type UserDetailRequest {
	Identity string `json:"identity"`
}

type UserDetailReply {
	Name  string `json:"name"`
	Email string `json:"email"`
}

type MailCodeSendRegisterRequest {
	Email string `json:"email"`
}

type MailCodeSendRegisterReply {
}

type UserRegisterRequest {
	Name     string `json:"name"`
	Password string `json:"password"`
	Email    string `json:"email"`
	Code     string `json:"code"`
}

type UserRegisterReply {
}

type FileUploadRequest {
	Hash string `json:"hash,optional"`
	Name string `json:"name,optional"`
	Ext  string `json:"ext,optional"`
	Size int64  `json:"size,optional"`
	Path string `json:"path,optional"`
}

type FileUploadReply {
	Identity string `json:"identity"`
	Ext      string `json:"ext"`
	Name     string `json:"name"`
}